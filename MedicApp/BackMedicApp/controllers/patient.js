//this will hold rotes for users/medics that can view the data
const express = require('express');
const authMiddleware = require('../middleware/auth');
const Patient = require('../models/patient');
const app = express();
const router = express.Router();

app.use(express.json());


router.get('/search/:id', authMiddleware, async (req, res) => {

  try {
    //TODO: to remove this as temp solution
    const data = getPatientData(req.params.id);
    res.send({ patientData: data });

  } catch (error) {
    res.status(500).json({ message: 'Internal server error' });
  }


  // try {
  //   const patient = await Patient.findOne({ patientId: req.params.id });
  //   if (!patient) {
  //     return res.status(404).json({ message: 'Patient not found' });
  //   }
  //   res.send(patient);
  // } catch (error) {
  //   res.status(500).json({ message: 'Internal server error' });
  // }
});
const getPatientData = (patientId) => {

  const patientsData = {
    12345678: [-11.43, -11.338, -5.986, -7.952, -12.75, -13.135, -12.34, -8.029, -7.434,
    -5.507, -5.258, -9.949, -9.771, -7.275, -4.252, -1.84, -6.385, -4.775,
    -0.579, -1.73, 0.523, -5.059, -9.057, -5.522, -3.229, -2.436, -3.489,
    -3.348, -5.866, -5.56, -2.429, -1.327, -3.289, -2.771, 0.967, -2.524,
    -4.068, -0.556, -2.022, -5.319, -1.009, -3.592, -8.804, -0.887, -0.579,
    -0.66, 3.24, -1.214, -0.762, -1.58, -3.24, -1.302, -1.811, 1.936, 3.115,
      2.666, 0.886, -2.127, -2.177, -5.418, -5.944, -4.674, -3.952, 1.93, 4.1,
    -0.924, 2.242, 3.338, -1.292, 4.682, 8.047, 6.561, 6.5, 4.649, 6.038, 7.638,
      7.039, 7.806, 6.524, 6.291, 9.339, 8.452, 6.96, 7.227, 5.54, 5, 4.298, 2.082,
      2.358, 5.739, 9.228, 9.603, 8.339, 10.366, 10.124, 7.259, 8.031, 9.245, 10.986],
    87654321: [-0.552, 0.367, 4.044, 2.859, 6.715, 5.814, 5.751, 7.74, 5.589, 2.307, 4.18,
      13.221, 12.2, 7.811, 7.621, 6.287, 6.284, 3.038, -0.277, -0.447, 2.97, 5.539,
      3.165, 3.556, 1.716, -2.19, -1.998, -1.869, -2.23, -2.451, -2.123, -1.32,
    -3.501, -5.402, -2.016, -1.685, -2.549, 0.011, 0.473, 0.351, -1.647, -1.861,
    -0.012, 0.032, -0.4, -2.039, 0.77, 2.19, 0.989, -0.438, -6.082, -4.159, 0.724,
    -0.316, 0.416, -0.775, -4.003, -1.66, -2.13, -2.85, -0.893, -2.412, -1.156,
    -0.774, -2.046, -3.428, -3.112, -3.524, -4.347, -0.376, -0.795, -0.835, -1.688,
    -3.759, -1.528, -3.895, -4.911, -2.419, -2.6, -2.774, -4.342, -6.284, -5.011,
    -3.231, -2.401, -1.639, -1.765, -2.975, -2.685, -3.189, -5.869, -3.162, -5.686,
    -10.849, -8.15, -6.706, -4.919, -4.123, -1.703],
    23456789: [2.3, 4.8, 9.0, 36, 7.2, 6.8, 4.4, 9.1, 2.9, 5.3, 8.0, 7.1, 3.7, 8.2, 5.6, 2.4, 6.3, 1.9, 5.4, 3.8],
    98765432: [7.2, 6.8, 4.4, 9.1, 2.9, 5.3, 8.0, 3.4, 2.2, 6.5, 9.3, 4.1, 7.7, 5.1, 3.0, 8.6, 2.5, 6.1, 4.7],
    34567890: [1.8, 5.9, 3.6, 8.4, 4.9, 7.5, 6.2, 3.3, 9.7, 7.2, 6.8, 4.4, 9.1, 2.9, 5.3, 8.0, 2.7, 5.7, 3.9],
  };

  return patientsData[patientId] || null;
};

module.exports = router;